{
  "name": "firebase-jest-testing",
  "//name": "@akauppi/firebase-jest-testing",
  "version": "0.0.1-beta.1",
  "description": "Tools for testing Firebase back-end features, using Jest.",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "ssh://git@github.com/akauppi/firebase-jest-testing.git",
    "directory": "packages/name"
  },
  "type": "module",
  "keywords": [
    "firebase",
    "jest"
  ],
  "homepage": "https://github.com/akauppi/firebase-jest-testing#readme",
  "files": [
    "src/**",
    "DESIGN.md",
    "Writing tests.md"
  ],
  "exports": {
    "./cjs": "./src/cjs/index.cjs",
    "./cloudFunctions": "./src/cloudFunctions/fns.js",
    "./firestore": "./src/firestore/index.js",
    "./firestoreReadOnly": "./src/firestoreReadOnly/index.js",
    "./jest": "./src/jest/eventually.js"
  },
  "peerDependencies": {
    "firebase": ">= 7.20.0 < 8",
    "jest": ">= 26.4.0"
  },
  "dependencies": {
    "@firebase/rules-unit-testing": "^1.0.2",
    "firebase": "^7.20.0",
    "firebase-admin": "^9.1.1",
    "node-fetch": "^2.6.1",
    "proper-lockfile": "^4.1.1"
  },
  "devDependencies": {
    "concurrently": "^5.3.0",
    "jest": "^26.4.2",
    "jest-circus": "^26.4.2",
    "wait-on": "^5.2.0"
  },
  "engines": {
    "node": ">=14.3"
  },
  "publishConfig": {
    "//registry": "https://npm.pkg.github.com/",
    "tag": "beta"
  },
  "--": "-- following stuff matters for development, only",
  "scripts": {
    "test": "npm run ci",
    "ci": "npm run ci:seq",
    "---": "",
    "ci:seq": "firebase emulators:exec --project=bunny --config firebase.json --only firestore,functions \"npm run _ci_init && npm run _ci_fns && npm run _ci_rules\"",
    "_ci_init": "node --harmony-top-level-await sample/prime-docs.js",
    "_ci_fns": "npx --node-arg=--experimental-vm-modules jest --config sample/test-fns/jest.config.cjs --verbose --detectOpenHandles",
    "_ci_rules": "npx --node-arg=--experimental-vm-modules jest --config sample/test-rules/jest.config.cjs --verbose --detectOpenHandles",
    "ci:par": "firebase emulators:exec --project=bunny --config firebase.json --only firestore,functions \"npm run _ci_par_2\"",
    "_ci_par_2": "concurrently -n test-fns,test-rules \"npm run _ci_init && npm run _ci_fns\" \"npm run _ci_rules\"",
    "---  ": "",
    "start": "concurrently -n emul,init \"firebase emulators:start --project=bunny --config firebase.json --only functions,firestore\" \"GCLOUD_PROJECT=bunny npm run _start_2\"",
    "_start_2": "wait-on http://localhost:4000 && node --harmony-top-level-await sample/prime-docs.js",
    "test:fns:callables": "GCLOUD_PROJECT=bunny npx --node-arg=--experimental-vm-modules jest --config sample/test-fns/jest.config.cjs -f callables.test.js",
    "test:fns:monitoring": "GCLOUD_PROJECT=bunny npx --node-arg=--experimental-vm-modules jest --config sample/test-fns/jest.config.cjs -f monitoring.test.js",
    "test:fns:userInfo": "GCLOUD_PROJECT=bunny npx --node-arg=--experimental-vm-modules jest --config sample/test-fns/jest.config.cjs -f userInfo.test.js --detectOpenHandles",
    "test:fns:all": "GCLOUD_PROJECT=bunny npx --node-arg=--experimental-vm-modules jest --config sample/test-fns/jest.config.cjs --verbose --detectOpenHandles",
    "---   ": "",
    "test:rules:invites": "npx --node-arg=--experimental-vm-modules --node-arg=--harmony-top-level-await jest --config sample/test-rules/jest.config.cjs -f invitesC.test.js --verbose --detectOpenHandles",
    "test:rules:projects": "npx --node-arg=--experimental-vm-modules --node-arg=--harmony-top-level-await jest --config sample/test-rules/jest.config.cjs -f projectsC.test.js --verbose --detectOpenHandles",
    "test:rules:symbols": "npx --node-arg=--experimental-vm-modules --node-arg=--harmony-top-level-await jest --config sample/test-rules/jest.config.cjs -f symbolsC.test.js --verbose --detectOpenHandles",
    "test:rules:userInfo": "npx --node-arg=--experimental-vm-modules --node-arg=--harmony-top-level-await jest --config sample/test-rules/jest.config.cjs -f userInfoC.test.js --verbose --detectOpenHandles",
    "test:rules:visited": "npx --node-arg=--experimental-vm-modules --node-arg=--harmony-top-level-await jest --config sample/test-rules/jest.config.cjs -f visitedC.test.js --verbose --detectOpenHandles",
    "test:rules:all": "npx --node-arg=--experimental-vm-modules --node-arg=--harmony-top-level-await jest --config sample/test-rules/jest.config.cjs --verbose --detectOpenHandles"
  },
  "//": {
    "--experimental-vm-modules": [
      "Needed for now (Aug 2020), to use native ES6 modules with Jest"
    ],
    "--detectOpenHandles speeds up tests": [
      "This is weird, but consistent (Jest 26). If we keep it in 'npm test', the test execution is ~2x faster (as reported, per test).",
      "However, chose to keep it only in tests which otherwise give a warning."
    ],
    "engines.node": [
      ">=14.3: has --harmony-top-level-await",
      ">=13.2: native ES module support"
    ],
    "peerDependencies": [
      "Force the downstream project to explicitly depend on these. It would be wrong that we bring the major libs in.",
      "However, use of '@firebase/rules-unit-testing' and 'firebase-admin' are seen as implementation details we want to hide."
    ],
    "devDependencies": {
      "proper-lockfile": [
        "Unless Firebase provides read-only access to the Firestore emulator, or there is a better locking approach,",
        "we are stuck with needing an OS level locking library. This one seemed simple, and does not need native compiles."
      ]
    },
    "exports": {
      "./package.json": [
        "NOT needed to be exposed, since we expose the 'cjs/jestResolver.cjs', instead. Ideally, many of these hacks",
        "shall fade out (with more ESM support in Jest >26).."
      ]
    }
  }
}
