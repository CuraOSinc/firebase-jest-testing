{
  "name": "firebase-jest-testing",
  "version": "0.0.2-beta.4",
  "description": "Tools for testing Firebase back-end features, using Jest.",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "ssh://git@github.com/akauppi/firebase-jest-testing.git"
  },
  "type": "module",
  "keywords": [
    "firebase",
    "jest"
  ],
  "homepage": "https://github.com/akauppi/firebase-jest-testing#readme",
  "files": [
    "src/**",
    "DESIGN.md",
    "Writing tests.md"
  ],
  "exports": {
    "./cjs": "./src/cjs/index.cjs",
    "./firestore": "./src/firestore/index.js",
    "./firestoreReadOnly": "./src/firestoreReadOnly/index.js",
    "./jest": "./src/jest/eventually.js"
  },
  "engines": {
    "node": "^14.3 || ^15",
    "npm": "^6 || >= 7.7.0"
  },
  "publishConfig": {
    "tag": "beta"
  },
  "peerDependencies": {
    "jest": "^27.0.0-next.7"
  },
  "dependencies": {
    "@firebase/rules-unit-testing": "^1.2.6",
    "firebase-admin": "^9.6.0",
    "node-fetch": "^3.0.0-beta.9",
    "proper-lockfile": "4.1.1"
  },
  "devDependencies": {
    "concurrently": "^6.0.0",
    "firebase": "^8.3.2",
    "jest": "27.0.0-next.6",
    "jest-circus": "27.0.0-next.6",
    "wait-on": "^5.3.0"
  },
  "--": "-- following stuff matters for development, only",
  "scripts": {
    "test": "npm run ci",
    "ci": "npm run ci:seq",
    "---": "",
    "ci:seq": "firebase emulators:exec --project=bunny --config firebase.json --only firestore,functions \"npm run _ci_init && npm run --silent _ci_fns && npm run --silent _ci_rules\"",
    "_ci_init": "node --harmony-top-level-await sample/prime-docs.js",
    "_ci_fns": "NODE_OPTIONS=\"--experimental-vm-modules --experimental-json-modules\" npx jest --config sample/test-fns/jest.config.cjs --verbose --detectOpenHandles",
    "_ci_rules": "NODE_OPTIONS=--experimental-vm-modules npx jest --config sample/test-rules/jest.config.cjs --verbose --detectOpenHandles",
    "ci:par": "firebase emulators:exec --project=bunny --config firebase.json --only firestore,functions \"npm run _ci_par_2\"",
    "_ci_par_2": "concurrently -n test-fns,test-rules \"npm run _ci_init && npm run _ci_fns\" \"npm run _ci_rules\"",
    "---  ": "",
    "start": "concurrently -n emul,init \"firebase emulators:start --project=bunny --config firebase.json --only functions,firestore\" \"GCLOUD_PROJECT=bunny npm run _start_2\"",
    "_start_2": "wait-on http://localhost:4000 && node --harmony-top-level-await sample/prime-docs.js",
    "test:fns:callables": "GCLOUD_PROJECT=bunny NODE_OPTIONS=\"--experimental-vm-modules --experimental-json-modules\" npx jest --config sample/test-fns/jest.config.cjs -f greet.8x.test.js --verbose --detectOpenHandles --all",
    "test:fns:userInfo": "NODE_OPTIONS=--experimental-vm-modules npx jest --config sample/test-fns/jest.config.cjs -f userInfo.test.js --verbose --detectOpenHandles --all",
    "test:fns:all": "GCLOUD_PROJECT=bunny NODE_OPTIONS=--experimental-vm-modules npx jest --config sample/test-fns/jest.config.cjs --verbose --detectOpenHandles --all",
    "---   ": "",
    "test:rules:invites": "NODE_OPTIONS=--experimental-vm-modules npx jest --config sample/test-rules/jest.config.cjs -f invitesC.test.js --verbose --detectOpenHandles --all",
    "test:rules:projects": "NODE_OPTIONS=--experimental-vm-modules npx jest --config sample/test-rules/jest.config.cjs -f projectsC.test.js --verbose --detectOpenHandles --all",
    "test:rules:symbols": "NODE_OPTIONS=--experimental-vm-modules npx jest --config sample/test-rules/jest.config.cjs -f symbolsC.test.js --verbose --detectOpenHandles --all",
    "test:rules:userInfo": "NODE_OPTIONS=--experimental-vm-modules npx jest --config sample/test-rules/jest.config.cjs -f userInfoC.test.js --verbose --detectOpenHandles --all",
    "test:rules:visited": "NODE_OPTIONS=--experimental-vm-modules npx jest --config sample/test-rules/jest.config.cjs -f visitedC.test.js --verbose --detectOpenHandles --all",
    "test:rules:all": "NODE_OPTIONS=--experimental-vm-modules npx jest --config sample/test-rules/jest.config.cjs --verbose --detectOpenHandles --all",
    "--- -": "",
    "postinstall": "(cd sample/functions && npm install)"
  },
  "//": {
    "--experimental-vm-modules": [
      "Needed for now (Aug 2020), to use native ES6 modules with Jest"
    ],
    "--detectOpenHandles speeds up tests": [
      "This is weird, but consistent (Jest 26). If we keep it in 'npm test', the test execution is ~2x faster (as reported, per test).",
      "However, chose to keep it only in tests which otherwise give a warning."
    ],
    "bunny": [
      "If httpsCallables are among the emulated features, Cloud Functions needs a dummy project id. The value is used in",
      "construction of the URL for the callable."
    ],
    "engines.node": [
      ">=14.3: has --harmony-top-level-await",
      ">=13.2: native ES module support",
      "",
      "15.9.0..15.11 (maybe more) and Jest 27.0.0-next.3 have a love bug: https://github.com/nodejs/node/issues/37426"
    ],
    "engines.npm": [
      ">= 7.7.0 because of this (only matters for 'npm publish') -> https://github.com/npm/cli/issues/2834"
    ],
    "peerDependencies": {
      "": [
        "Force the downstream project to explicitly depend on these. It would be wrong that we bring the major libs in.",
        "However, use of '@firebase/rules-unit-testing' and 'firebase-admin' are seen as implementation details we want to hide."
      ]
    },
    "dependencies": {
      "proper-lockfile": [
        "Unless Firebase provides read-only access to the Firestore emulator, or there is a better locking approach,",
        "we are stuck with needing an OS level locking library. This one seemed simple, and does not need native compiles.",
        "Intentionally sticking with '4.1.1'. Its implementation is simple."
      ]
    },
    "devDependencies": {
      "firebase": [
        "Needed for testing the 'httpsCallable's. Otherwise, we are a server-side library and the caller is not",
        "burdened by this; nor do we care what client side platform or versions they use!"
      ]
    }
  }
}
