{
  "name": "@local/root",
  "description": "Root - running 'firebase-jest-testing' against a sample project.",
  "license": "MIT",
  "private": true,
  "type": "module",
  "engines": {
    "node": "^14.3 || ^16",
    "npm": ">= 7.7.0"
  },
  "bin": {
    "active-project": "./tools/active-project.sh",
    "filter-emulators": "./tools/filter-emulators.sh",
    "wait-for": "./tools/wait-for.js"
  },
  "scripts": {
    "test": "concurrently --kill-others --success=first --prefix none \"npm run start > /dev/null\" \"wait-for 4000 && npm run -s _ci_seq\"",
    "//test": "npm run -s ci",
    "---": "",
    "ci": "npm run ci:seq",
    "ci:seq": "concurrently --kill-others --success=first --prefix none \"npm run start > /dev/null\" \"wait-for 4000 && npm run -s _ci_seq\"",
    "_ci_seq": "npm run -s _ci_fns && npm run -s _ci_rules",
    "//ci:par": "concurrently --kill-others --success=first --prefix none \"npm run -s _ci_start\" \"wait-for 4000 && npm run -s _ci_par\"",
    "//_ci_par": "concurrently -n test-fns,test-rules \"npm run -s _ci_fns\" \"npm run -s _ci_rules\"",
    "_ci_fns": "NODE_OPTIONS=--experimental-vm-modules jest --config sample/test-fns/jest.config.js --verbose --detectOpenHandles",
    "_ci_rules": "NODE_OPTIONS=--experimental-vm-modules jest --config sample/test-rules/jest.config.js --verbose --detectOpenHandles",
    "---  ": "",
    "start": "firebase emulators:start --project=demo-1 | $(filter-emulators)",
    "//start:pipeless": "firebase emulators:start --project=demo-1",
    "test:fns:callables": "NODE_OPTIONS=--experimental-vm-modules jest --config sample/test-fns/jest.config.js -f greet.test.js --verbose --detectOpenHandles --all",
    "test:fns:userInfo": "NODE_OPTIONS=--experimental-vm-modules jest --config sample/test-fns/jest.config.js -f userInfo.test.js --verbose --detectOpenHandles --all",
    "test:fns:all": "NODE_OPTIONS=--experimental-vm-modules jest --config sample/test-fns/jest.config.js --verbose --detectOpenHandles --all",
    "---   ": "",
    "test:rules:invites": "NODE_OPTIONS=--experimental-vm-modules jest --config sample/test-rules/jest.config.js -f invitesC.test.js --verbose --detectOpenHandles --all",
    "test:rules:projects": "NODE_OPTIONS=--experimental-vm-modules jest --config sample/test-rules/jest.config.js -f projectsC.test.js --verbose --detectOpenHandles --all",
    "test:rules:symbols": "NODE_OPTIONS=--experimental-vm-modules jest --config sample/test-rules/jest.config.js -f symbolsC.test.js --verbose --detectOpenHandles --all",
    "test:rules:userInfo": "NODE_OPTIONS=--experimental-vm-modules jest --config sample/test-rules/jest.config.js -f userInfoC.test.js --verbose --detectOpenHandles --all",
    "test:rules:visited": "NODE_OPTIONS=--experimental-vm-modules jest --config sample/test-rules/jest.config.js -f visitedC.test.js --verbose --detectOpenHandles --all",
    "test:rules:all": "NODE_OPTIONS=--experimental-vm-modules jest --config sample/test-rules/jest.config.js --verbose --detectOpenHandles --all",
    "--- -": "",
    "postinstall": "npm --prefix sample/functions install",
    "--- - ": "",
    "prestart": "npm run -s _checkNoActive",
    "_checkNoActive": "[[ $BUILD_ID ]] || (! active-project) || ( >&2 grep -v '^#' step-down.txt; false )",
    "--- --": "",
    "//clean": "rm -rf node_modules package/node_modules sample/functions/node_modules"
  },
  "devDependencies": {
    "@local/self": "file:.",
    "concurrently": "^6.2.0",
    "firebase-jest-testing": "file:package",
    "firebase-tools": "^9.14.0",
    "jest": "^27.0.6"
  },
  "//": {
    "--experimental-vm-modules": [
      "Needed for now (May 2021, ~Aug 2020~), to use native ES6 modules with Jest"
    ],
    "firebase emulators:...": [
      "If httpsCallables are among the emulated features, Cloud Functions needs a project id. The value is used in",
      "construction of the URL for the callable."
    ],
    "engines.node": [
      ">=14.3: has --harmony-top-level-await",
      ">=13.2: native ES module support"
    ],
    "engines.npm": [
      ">= 7.7.0 because of this (only matters for 'npm publish') -> https://github.com/npm/cli/issues/2834"
    ],
    "devDependencies": {
      "@local/self": [
        "Allows us to use the 'bin' section to alias commands."
      ]
    },
    "scripts": {
      "_ci_start": [
        "This (and separating 'test' from 'ci') is a work-around, since Alpine Linux (that we use in the CI Docker image) gets 'concurrently' (6.2.0)",
        "stuck, if a pipe is used in a command. See TRACK.md"
      ]
    }
  }
}
